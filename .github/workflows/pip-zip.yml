# This is a basic workflow to help you get started with Actions

name: PIP zip

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  DownloadPips-linux:
    name: Download Pips for RHEL 7
    concurrency: download_pips
    runs-on: ubuntu-latest
    container:
      image: registry.access.redhat.com/ubi7
      volumes:
        - ${{ github.workspace }}:/repo
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        run: |
          yum update -y
          yum install -y openssl-devel rh-python36 rh-python38
          curl https://bootstrap.pypa.io/pip/2.7/get-pip.py > get-pip.py
          python get-pip.py
          mkdir -p /repo/pips
      - name: Download packages for python 3.6
        run: |
          scl enable rh-python36 "python -m pip install --upgrade pip setuptools wheel cython"
          cd /repo
          if [ -f requirements.txt ]; then
            cat requirements.txt | scl enable rh-python36 "xargs -n1 -d '\n' python -m pip download -d pips "
            scl enable rh-python36 "python -m pip download -d pips -r requirements.txt"
          fi
          exit
      - name: Download packages for python 3.8
        run: |
          scl enable rh-python38 "python -m pip install --upgrade pip setuptools wheel cython"
          cd /repo
          if [ -f requirements.txt ]; then
            cat requirements.txt | scl enable rh-python38 "xargs -n1 -d '\n' python -m pip download -d pips "
            scl enable rh-python38 "python -m pip download -d pips -r requirements.txt"
          fi
          exit
      - name: Download packages for python 2.7
        run: |
          cd /repo
          pip --no-python-version-warning config set global.no-python-version-warning true
          pip config set global.use-feature 2020-resolver
          python -m pip install --upgrade pip setuptools wheel setuptools-scm cython numpy pybind11
          if [ -f requirements.txt ]; then
            cat requirements.txt | xargs -n1 -d '\n' python -m pip download -d pips
            python -m pip download -d pips -r requirements.txt
          fi
      - name: Restore downloaded
        uses: actions/cache/restore@v3
        with:
          key: downloaded
          path: ${{ github.workspace }}
      - name: Check if files already downloaded
        run: |
          touch downloaded.sha512
          cd pips
          for file in ./*; do
            if sha512sum -c --status <(grep "$file" ../downloaded.sha512); then
              echo "$file already downloaded, removing..."
              rm "$file"
            else
              sha512sum "$file" >> ../downloaded.sha512
            fi
          done
      - name: Upload pips
        uses: actions/upload-artifact@v3
        with:
          name: pips
          path: pips
      - name: Upload downloaded to cache
        uses: actions/cache/save@v3
        with:
          key: downloaded
          path: downloaded.sha512

  DownloadPips-windows:
    name: Download Pips for Windows
    concurrency: download_pips
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          # Version range or exact version of Python or PyPy to use, using SemVer's version range syntax. Reads from .python-version if unset.
          python-version: |
            2.7
            3.6
            3.7
            3.8
            3.9
            3.10
            3.11
          # The target architecture (x86, x64) of the Python or PyPy interpreter.
          architecture: x64
          cache: "pip"
      - name: Install pip and setup folder
        run: |
          mkdir -p pips
      - name: Download packages for python 3.11
        run: |
          if [ -f requirements.txt ]; then
            cat requirements.txt | xargs -n1 -d '\n' py -3.11 -m pip download -d pips
            py -3.11 -m pip download -d pips -r requirements.txt
          fi
        shell: bash
      - name: Download packages for python 3.10
        run: |
          if [ -f requirements.txt ]; then
            cat requirements.txt | xargs -n1 -d '\n' py -3.10 -m pip download -d pips
            py -3.10 -m pip download -d pips -r requirements.txt
          fi
        shell: bash
      - name: Download packages for python 3.9
        run: |
          if [ -f requirements.txt ]; then
            cat requirements.txt | xargs -n1 -d '\n' py -3.9 -m pip download -d pips
            py -3.9 -m pip download -d pips -r requirements.txt
          fi
        shell: bash
      - name: Download packages for python 3.8
        run: |
          if [ -f requirements.txt ]; then
            cat requirements.txt | xargs -n1 -d '\n' py -3.8 -m pip download -d pips
            py -3.8 -m pip download -d pips -r requirements.txt
          fi
        shell: bash
      - name: Download packages for python 3.7
        run: |
          if [ -f requirements.txt ]; then
            cat requirements.txt | xargs -n1 -d '\n' py -3.7 -m pip download -d pips
            py -3.7 -m pip download -d pips -r requirements.txt
          fi
        shell: bash
      - name: Download packages for python 3.6
        run: |
          if [ -f requirements.txt ]; then
            cat requirements.txt | xargs -n1 -d '\n' py -3.6 -m pip download -d pips
            py -3.6 -m pip download -d pips -r requirements.txt
          fi
        shell: bash
      - name: Download packages for python 2.7
        run: |
          py -2.7 -m pip --no-python-version-warning config set global.no-python-version-warning true
          py -2.7 -m pip config set global.use-feature 2020-resolver
          py -2.7 -m pip install setuptools-scm
          if [ -f requirements.txt ]; then
            cat requirements.txt | xargs -n1 -d '\n' py -2.7 -m pip download -d pips
            py -2.7 -m pip download -d pips -r requirements.txt
          fi
        shell: bash
      - name: Restore downloaded
        uses: actions/cache/restore@v3
        with:
          key: downloaded
          path: ${{ github.workspace }}
      - name: Check if files already downloaded
        run: |
          touch downloaded.sha512
          cd pips
          for file in ./*; do
            if sha512sum -c --status <(grep "$file" ../downloaded.sha512); then
              echo "$file already downloaded, removing..."
              rm "$file"
            else
              sha512sum "$file" >> ../downloaded.sha512
            fi
          done
        shell: bash
      - name: Upload pips
        uses: actions/upload-artifact@v3
        with:
          name: pips
          path: pips
      - name: Upload downloaded to cache
        uses: actions/cache/save@v3
        with:
          key: downloaded
          path: downloaded.sha512
